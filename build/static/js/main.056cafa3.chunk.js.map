{"version":3,"sources":["services/api.ts","pages/FormaPagamento/styles.ts","pages/FormaPagamento/index.tsx","pages/Produtos/styles.ts","pages/Produtos/index.tsx","routes/index.tsx","styles/global.ts","App.tsx","index.tsx"],"names":["api","axios","create","baseURL","styled","h1","Form","div","props","isClick","css","isViewTroco","FormaPagamento","location","useLocation","useState","troco","setTroco","idlinha","setIdLinha","vlrIncial","setVlrIncial","idVenda","search","replace","totalagora","setTotalAgora","valRestante","setValRestante","inputRef","useRef","selectRef","formaPId","setFormaPId","formaPNome","setFormaPNome","useCallback","a","handleAddRepo","id","ordem","nome","options","setOption","id_forma_pagamet","formapagamento","valor","clicado","tipopagam","setTipopagam","setAtzTipopagam","setIsclick","setIsViewTroco","get","then","response","valorSoma","data","totalIncial","valorAnt","current","value","Number","clickselect","or","selectedIndex","useEffect","delete","handleAddRepository3","valTotal","handleselect","verinputref","toString","valRes","post","id_forma_pagmet","selref","id_venda","status","res","tlt","console","log","totalgeral","reduce","acc","verSinal","Math","sign","alert","verId","totalReduzido","id_cliente","funcionario","idVendaCriado","put","id_vendas","window","href","updateddadoscliente","map","d","voltarPdv","updatedFormaPagSel","className","ref","onLoad","e","target","onChange","disabled","hidden","option","toLocaleString","style","currency","onClick","onKeyDown","type","defaultValue","sort","b","dados","GRADE","Dashboard","codigo","setCodigo","setNome","custo","setCusto","valor_venda","setValorVenda","estoqueMin","setEstoqueMin","estoqueMax","setEstoqueMax","embalagem","setEmbalagem","quantidade","descricaoR","setDescricaoR","descricaoGeral","setDescricaoGeral","id_grupo","setId_grupo","setProduto","grupoproduto","setGrupoproduto","addProduto","name","Routes","path","exact","component","Produtos","createGlobalStyle","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.056cafa3.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n    baseURL: 'http://177.136.75.21:3000',\n});\n\nexport default api;\n","import styled, { css } from 'styled-components';\nimport { shade } from 'polished';\n\nexport const Title = styled.h1`\n    font-size: 48px;\n    color: '#3a3a3a';\n    max-width: 450px;\n    line-height: 56px;\n    margin-top: 80px;\n`;\ninterface displayNoneFlex {\n    isClick: boolean;\n    isViewTroco: boolean;\n}\nexport const Form = styled.div<displayNoneFlex>`\n    .corteste {\n        background-color: #000;\n    }\n    color: #fff;\n    border: 1px #fff;\n    border-radius: 4px;\n    html {\n        background-color: #128ac6;\n        height: 100%;\n        margin: 0;\n    }\n    #ValorRestante {\n        text-align: right;\n        padding-right: 4px;\n        background-color: #c7c7c7;\n    }\n    height: 500px;\n    display: flex;\n\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    width: 1000px;\n    #forma {\n        height: 100%;\n        margin: 0;\n        display: flex;\n        width: 1000px;\n        flex-direction: column;\n        align-items: center;\n    }\n    #tudo {\n        padding: 15px;\n        border: 1px solid #fff;\n        border-radius: 4px;\n\n        box-shadow: 1px 1px 3px #000;\n        align-items: center;\n    }\n\n    #btm2 {\n        margin-left: 4px;\n    }\n    .btm {\n        padding: 4px;\n        background-color: #e5e5e5;\n    }\n    #butoesfinais {\n        display: flex;\n        flex-direction: row;\n\n        align-items: flex-end;\n        justify-content: flex-end;\n    }\n\n    .botoes {\n        margin: 10px;\n    }\n    .btf {\n        margin: 10px;\n        border-radius: 3px;\n        border: 0px;\n        padding: 7px;\n        box-shadow: none;\n        background-color: #e5e5e5;\n        &:hover {\n            background-color: #c0c0c0;\n        }\n    }\n\n    #caixa {\n        width: 1000px;\n        height: 100%;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background-color: #128ac6;\n    }\n    #container1 {\n        border-radius: 5px;\n        border: 1px solid #fff;\n        padding: 4px;\n        border-color: #fff;\n    }\n    #inicio {\n        display: flex;\n        flex-direction: row;\n    }\n    #meio {\n        background-color: #fff;\n        /* width: 100%; */\n        height: 100px;\n        overflow: auto;\n        margin-bottom: 4px;\n    }\n\n    h4 {\n        color: #000;\n        font-size: 50px;\n    }\n    h1 {\n        weight: 100px;\n        font-size: 15px;\n    }\n\n    table {\n        border-collapse: collapse;\n        width: 100%;\n        margin-bottom: 7px;\n        display: table;\n    }\n    tr:hover {\n        cursor: pointer;\n    }\n    th {\n        background-color: #c0c0c0;\n        color: #000;\n        border-bottom: 1px dotted #000;\n        padding-top: 12px;\n        padding-bottom: 12px;\n        text-align: left;\n    }\n\n    th,\n    td {\n        border: 1px solid #ddd;\n        padding: 2px;\n        height: 12px;\n        vertical-align: bottom;\n    }\n\n    td {\n        color: #000;\n    }\n\n    .activedados {\n        background-color: #3390ff;\n    }\n    .activedados td {\n        color: #fff;\n    }\n    .item {\n        background-color: #fff;\n        color: #000;\n    }\n    .item td {\n        color: #000;\n    }\n    .tdh:hover {\n        background-color: #3390ff;\n    }\n    #idVRI {\n        display: none;\n    }\n\n    .idVR {\n        color: #000;\n        margin-bottom: 4px;\n        border: 1px solid #c0c0c0;\n        height: 20px;\n        align-items: right;\n    }\n    #idC {\n        background-color: #fff;\n        color: #000;\n        margin-bottom: 4px;\n        border: 1px solid #c0c0c0;\n        height: 20px;\n        align-items: right;\n    }\n    #idCInp {\n        background-color: #fff;\n        color: #000;\n        margin-bottom: 4px;\n        border: 1px solid #c0c0c0;\n        height: 20px;\n\n        text-align: right;\n        display: flex;\n    }\n    #lbs_cabeçalho {\n        align-items: left;\n        margin-left: 5px;\n        margin-right: 5px;\n    }\n    input,\n    select {\n        height: 20px;\n        border: 1px solid #c0c0c0;\n        margin-left: 5px;\n        margin-right: 5px;\n    }\n    .idcod {\n        text-align: left;\n        padding-left: 2px;\n    }\n    .idcodInp {\n        text-align: right;\n        padding-left: 2px;\n    }\n    input {\n        text-align: right;\n        width: 100px;\n        padding: 4px;\n    }\n\n    .Valor {\n        text-align: right;\n        width: 100px;\n    }\n    .id {\n        text-align: right;\n        padding-right: 4px;\n        background-color: #c7c7c7;\n    }\n\n    #final {\n        display: flex;\n        flex-direction: row;\n    }\n    #btnInEx {\n        width: 500px;\n    }\n    #final #troco {\n        display: none;\n    }\n    #final #troco #hb {\n        margin-left: 100px;\n        font-size: 30px;\n        margin-bottom: 5px;\n        margin-top: 5px;\n    }\n    #final #troco #hb2 {\n        margin-left: 10px;\n        margin-right: 10px;\n        margin-bottom: 5px;\n        margin-top: 5px;\n        padding-left: 5px;\n        padding-right: 5px;\n        border-radius: 5px;\n        background-color: #fff;\n        font-size: 30px;\n        color: #000;\n        width: 100%;\n    }\n\n    ${props =>\n        props.isClick &&\n        css`\n            #idVRI {\n                display: flex;\n            }\n            #idCInp {\n                display: none;\n            }\n        `}\n    ${props =>\n        props.isViewTroco &&\n        css`\n            #final #troco {\n                display: flex;\n                flex-direction: row;\n                align-items: center;\n                justify-content: flex-end;\n            }\n        `}\n`;\n","import { render } from '@testing-library/react';\nimport React, {\n    FormEvent,\n    useState,\n    useEffect,\n    useCallback,\n    useRef,\n} from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\n\nimport { keyframes } from 'styled-components';\nimport api from '../../services/api';\nimport { Form } from './styles';\n\nconst FormaPagamento: React.FC = () => {\n    const location = useLocation();\n    const [troco, setTroco] = useState(0);\n    const [idlinha, setIdLinha] = useState(0);\n    const [vlrIncial, setVlrIncial] = useState(0);\n    const idVenda = location.search.replace('?', '');\n\n    const [totalagora, setTotalAgora] = useState(0);\n    const [valRestante, setValRestante] = useState(0);\n\n    const inputRef = useRef<HTMLInputElement>(null);\n    const selectRef = useRef<HTMLSelectElement>(null);\n\n    const [formaPId, setFormaPId] = useState(1); // PEGA O ID DA CAIXA DE COMBINAÇÃO\n    const [formaPNome, setFormaPNome] = useState(''); // PEGA O NOME QUE TÁ NA CAIXA DE COMBINAÇÃO\n\n    // window.addEventListener('load', carrega);\n    const carrega = useCallback(() => {\n        async function handleAddRepo(): Promise<void> {\n            // await api.get(`itemvenda/soma/${idVenda}`).then(response => {});\n        }\n        handleAddRepo();\n    }, []);\n    // OPÇÕES DA FORMA DE PAGAMENTO /////////////////////////////////////////////\n\n    const [options, setOption] = useState([{ id: 0, ordem: 0, nome: 'teste' }]);\n\n    const [tipopagam, setTipopagam] = useState([\n        {\n            id: 0,\n            id_forma_pagamet: 0,\n            ordem: 0,\n            formapagamento: '',\n            valor: 0,\n            clicado: false,\n        },\n    ]);\n    const [atztipopagam, setAtzTipopagam] = useState([\n        {\n            id: 0,\n            id_forma_pagamet: 2,\n            ordem: 0,\n            formapagamento: '',\n            valor: 0,\n            clicado: false,\n        },\n    ]);\n    const [isClick, setIsclick] = useState(false);\n    const [isViewTroco, setIsViewTroco] = useState(false);\n\n    async function handleAddRepository(\n        event: FormEvent<HTMLFormElement>,\n    ): Promise<void> {\n        event.preventDefault();\n    }\n    async function totalIncial(): Promise<void> {\n        let valorSoma;\n        await api.get(`itemvenda/soma/${idVenda}`).then(response => {\n            valorSoma = response.data;\n        });\n        return valorSoma;\n    }\n\n    const vinical = totalIncial();\n    const [formText, setFormText] = useState('');\n    const total = vinical;\n\n    // AQUI É O CARREGAMENTO INICIAL DA CAIXA DE COMBIANAÇÃO E TOTAL DA VENDA\n    useEffect(() => {\n        async function handleAddRepository3(): Promise<void> {\n            await api.get('formapagamento').then(response => {\n                setOption(response.data);\n            });\n            await api.get(`itemvenda/soma/${idVenda}`).then(response => {\n                setValRestante(response.data);\n                setTotalAgora(response.data);\n                setVlrIncial(response.data);\n            });\n            await api.get(`formapagamento/1`).then(response => {\n                setFormaPNome(response.data);\n            });\n\n            await api.delete(`formapagamentovendaDel/${0}`);\n        }\n        handleAddRepository3();\n    }, []);\n\n    async function clickinput(): Promise<void> {\n        const valorAnt = inputRef.current?.value;\n        setTotalAgora(Number(valorAnt));\n    }\n    // ATUALIZAR O NOME DA FORMA DE PAGAMENTO///////////////////////////\n    async function clickselect(): Promise<void> {\n        const or = selectRef.current?.selectedIndex;\n\n        if (Number(or) !== 0) {\n            await api.get(`formapagamento/${or}`).then(response => {\n                setFormaPNome(response.data);\n            });\n        } else if (Number(or) === 0) {\n            await api.get(`formapagamento/1`).then(response => {\n                setFormaPNome(response.data);\n            });\n        }\n    }\n    /// /////////////////////////////////////////////////////////////////\n\n    // FUNÇÃO DO BOTÃO INCLUIR///////////////////////////////////////////////////////\n    const [valores, setValores] = useState(0);\n    async function soma(): Promise<void> {\n        await api.get(`formapagamentovenda/soma/${0}`).then(res => {\n            setValores(res.data);\n        });\n    }\n    let valTotal = 0;\n    useEffect(() => {\n        setAtzTipopagam(tipopagam);\n        const updateddadoscliente = tipopagam.map(d =>\n            d.id === idlinha\n                ? { ...d, clicado: true }\n                : { ...d, clicado: false },\n        );\n\n        setTipopagam(updateddadoscliente);\n    }, [idlinha]);\n    async function incluir(): Promise<void> {\n        const verId = options[formaPId - 1];\n        const selref = verId.id;\n\n        async function handleselect(): Promise<void> {\n            const verinputref = totalagora.toString(); // inputRef.current?.value;\n            const valRes = valRestante.toString(); /// inputRefVR.current?.value;\n\n            const Vr = Number(valRes);\n\n            if (Vr > 0) {\n                if (Number(verinputref) > 0) {\n                    await api.post('formapagamentovenda', {\n                        id_forma_pagmet: Number(selref),\n                        id_venda: 0,\n                        valor: verinputref,\n                        ordem: formaPId,\n                        formapagamento: formaPNome,\n                        status: false,\n                    });\n                    await api.get('formapagamentovenda').then(res => {\n                        setTipopagam(res.data);\n                    });\n                    await api.get(`formapagamentovenda/soma/${0}`).then(res => {\n                        valTotal = res.data;\n                    });\n                    setAtzTipopagam(tipopagam);\n\n                    const tlt = valTotal;\n                    console.log(tipopagam);\n                    if (Number(vlrIncial) >= Number(tlt)) {\n                        setValRestante(Number(vlrIncial) - Number(tlt));\n                        setTroco(0);\n                        setIsclick(false);\n                        setTotalAgora(Number(vlrIncial) - Number(tlt));\n                        setIsViewTroco(false);\n                        const totalgeral = tipopagam?.reduce(\n                            (acc, current) => acc + current.valor,\n                            0,\n                        );\n                        console.log(`VALOR TOTAL GERAL${totalgeral}`);\n                    } else if (Number(vlrIncial) < Number(tlt)) {\n                        setValRestante(0);\n                        setIsViewTroco(true);\n                        const verSinal = Number(tlt) - Number(vlrIncial);\n                        if (Math.sign(verSinal) === -1) {\n                            setTroco(-1 * verSinal);\n                        } else {\n                            setTroco(verSinal);\n                        }\n                    }\n                } else if (Number(verinputref) === 0) {\n                    alert('O valor de pagamento não pode ser zero');\n                }\n            } else if (Number(valRestante) === 0) {\n                alert('O Valor Restante Encontra-se zerado');\n            }\n        }\n        handleselect();\n    }\n    // =======================\n\n    async function excluir(): Promise<void> {\n        async function handleselect(): Promise<void> {\n            if (idlinha !== 0) {\n                await api.delete(`formapagamentovenda/${idlinha}`);\n                await api.get('formapagamentovenda').then(res => {\n                    setTipopagam(res.data);\n                });\n                await api.get(`formapagamentovenda/soma/${0}`).then(res => {\n                    valTotal = res.data;\n                });\n\n                const totalReduzido = valTotal;\n                console.log(totalReduzido);\n                if (Number(vlrIncial) >= Number(totalReduzido)) {\n                    setIsclick(true);\n                    setTroco(0);\n                    setIsViewTroco(false);\n                    setValRestante(Number(vlrIncial) - Number(totalReduzido));\n                    setTotalAgora(Number(vlrIncial) - Number(totalReduzido));\n                } else if (Number(vlrIncial) < Number(totalReduzido)) {\n                    setIsclick(true);\n                    setIsViewTroco(true);\n                    setValRestante(0);\n                    setTotalAgora(0);\n                    const verSinal = Number(totalReduzido) - Number(vlrIncial);\n\n                    if (Math.sign(verSinal) === -1) {\n                        setTroco(-1 * verSinal);\n                    } else {\n                        setTroco(verSinal);\n                    }\n                }\n                setIdLinha(0);\n            } else if (idlinha === 0) {\n                alert('Selecione um item acima para excluir');\n            }\n        }\n\n        handleselect();\n    }\n\n    async function finalizar(): Promise<void> {\n        await api.post('venda', {\n            id_cliente: 1,\n            funcionario: 'Danilo',\n        });\n        let idVendaCriado = 0;\n        await api.get('ultimavenda').then(res => {\n            idVendaCriado = res.data;\n        });\n\n        const id_venda = Number(idVendaCriado);\n        const status = true;\n        await api.put(`formapagamentovendaDel/${0}`, {\n            id_venda,\n            status,\n        });\n\n        await api.put(`itemvendaVenda/${0}`, {\n            id_vendas: Number(idVendaCriado),\n            status: 1,\n        });\n\n        window.location.href = '/';\n    }\n\n    const voltarPdv = useCallback(() => {\n        alert('Pedido encontre-se aberto');\n        window.location.href = '/produtos';\n    }, []);\n    async function teste(): Promise<void> {\n        document.getElementById('teste');\n    }\n\n    useEffect(() => {\n        const updatedFormaPagSel = tipopagam.map(d =>\n            d.id === idlinha\n                ? { ...d, clicado: true }\n                : { ...d, clicado: false },\n        );\n        console.log('Chamou a função');\n        setTipopagam(updatedFormaPagSel);\n    }, [idlinha]);\n\n    return (\n        <Form isClick={isClick} isViewTroco={isViewTroco}>\n            <script />\n            <div id=\"carroça\">\n                <div id=\"caixa\">\n                    <form id=\"forma\">\n                        <div id=\"tudo\">\n                            <div id=\"container1\">\n                                <div id=\"inicio\">\n                                    <div>\n                                        <h1 id=\"lbs_cabeçalho\">Codigo</h1>\n                                        <h1 id=\"idC\" className=\"idcod\">\n                                            {' '}\n                                            {formaPId.toString()}\n                                        </h1>\n                                    </div>\n                                    <div id=\"corpo\">\n                                        <h1 id=\"lbs_cabeçalho\">\n                                            Forma de Pagamento\n                                        </h1>\n                                        <select\n                                            id=\"selectId\"\n                                            ref={selectRef}\n                                            onLoad={e =>\n                                                setFormaPId(Number(e.target))\n                                            }\n                                            onChange={e => [\n                                                [\n                                                    setFormaPId(\n                                                        Number(\n                                                            e.target\n                                                                .selectedIndex,\n                                                        ),\n                                                    ),\n                                                    clickselect(),\n                                                ],\n                                            ]}\n                                        >\n                                            <option\n                                                value=\"Selecione\"\n                                                disabled\n                                                hidden\n                                            >\n                                                Selecione uma opção\n                                            </option>\n                                            {options.map(option => {\n                                                return (\n                                                    <option\n                                                        key={option.id}\n                                                        value={option.ordem}\n                                                    >\n                                                        {option.nome}\n                                                    </option>\n                                                );\n                                            })}\n                                        </select>\n                                    </div>\n                                    <div>\n                                        <h1\n                                            id=\"lbs_cabeçalho\"\n                                            className=\"Valor\"\n                                        >\n                                            Valor\n                                        </h1>\n                                        <input\n                                            id=\"idCInp\"\n                                            className=\"idcodInp\"\n                                            value={totalagora.toLocaleString(\n                                                'pt-br',\n                                                {\n                                                    style: 'currency',\n                                                    currency: 'BRL',\n                                                },\n                                            )}\n                                            onClick={e => setIsclick(true)}\n                                        />\n\n                                        <input\n                                            onKeyDown={e => setIsclick(true)}\n                                            className=\"idVR\"\n                                            id=\"idVRI\"\n                                            type=\"text\"\n                                            ref={inputRef}\n                                            onClick={clickinput}\n                                            defaultValue={valRestante}\n                                            onChange={({ target }) =>\n                                                setTotalAgora(\n                                                    Number(target.value),\n                                                )\n                                            }\n                                        />\n                                    </div>\n                                    <div>\n                                        <h1\n                                            id=\"lbs_cabeçalho\"\n                                            className=\"Valor\"\n                                        >\n                                            Vr. Restante\n                                        </h1>\n                                        <input\n                                            className=\"idVR\"\n                                            id=\"ValorRestante\"\n                                            value={valRestante.toLocaleString(\n                                                'pt-br',\n                                                {\n                                                    style: 'currency',\n                                                    currency: 'BRL',\n                                                },\n                                            )}\n                                        />\n                                    </div>\n                                </div>\n\n                                <div id=\"meio\">\n                                    <table id=\"customers\">\n                                        <thead>\n                                            <tr>\n                                                <th id=\"id\">id</th>\n                                                <th>Forma de Pagamento</th>\n                                                <th className=\"idQ\">Valor </th>\n                                            </tr>\n                                        </thead>\n\n                                        <thead>\n                                            {tipopagam\n                                                .sort((a, b) =>\n                                                    a.ordem > b.ordem ? 1 : -1,\n                                                )\n                                                .map(dados => (\n                                                    <tr\n                                                        className={\n                                                            dados.clicado\n                                                                ? 'activedados'\n                                                                : 'item'\n                                                        }\n                                                        onClick={e =>\n                                                            setIdLinha(dados.id)\n                                                        }\n                                                        key={dados.id}\n                                                    >\n                                                        <td>\n                                                            {dados.ordem || ''}\n                                                        </td>\n                                                        <td>\n                                                            {\n                                                                dados.formapagamento\n                                                            }\n                                                        </td>\n                                                        <td>\n                                                            {dados.valor.toLocaleString(\n                                                                'pt-br',\n                                                                {\n                                                                    style:\n                                                                        'currency',\n                                                                    currency:\n                                                                        'BRL',\n                                                                },\n                                                            ) || ''}\n                                                        </td>\n                                                    </tr>\n                                                ))}\n                                        </thead>\n                                    </table>\n                                </div>\n                                <div id=\"final\">\n                                    <div>\n                                        <button\n                                            className=\"btm\"\n                                            type=\"button\"\n                                            onClick={incluir}\n                                        >\n                                            Incluir\n                                        </button>\n                                        <button\n                                            id=\"btm2\"\n                                            className=\"btm\"\n                                            type=\"button\"\n                                            onClick={excluir}\n                                        >\n                                            Excluir\n                                        </button>\n                                    </div>\n                                    <div id=\"troco\">\n                                        <h1 id=\"hb\">Troco: </h1>\n                                        <h1 id=\"hb2\">\n                                            {troco.toLocaleString('pt-br', {\n                                                style: 'currency',\n                                                currency: 'BRL',\n                                            })}\n                                        </h1>\n                                    </div>\n                                </div>\n                            </div>\n                            <div id=\"butoesfinais\">\n                                <div>\n                                    <button\n                                        className=\"btf\"\n                                        type=\"button\"\n                                        onClick={finalizar}\n                                    >\n                                        Finalizar\n                                    </button>\n                                </div>\n                                <div>\n                                    <button\n                                        className=\"btf\"\n                                        type=\"button\"\n                                        onClick={voltarPdv}\n                                    >\n                                        Cancelar\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </Form>\n    );\n};\n\nexport default FormaPagamento;\n","import styled, { css } from 'styled-components';\nimport { shade } from 'polished';\n\ninterface FormProps {\n    hasError: Boolean;\n}\nexport const Title = styled.h1`\n    font-size: 48px;\n    color: '#3a3a3a';\n    max-width: 450px;\n    line-height: 56px;\n    margin-top: 80px;\n\n    .containers {\n        width: 100%;\n        margin: 1000px;\n    }\n`;\n\nexport const GRADE = styled.div`\n    border-radius: 4px;\n    border: 1px solid #fff;\n    width: 600px;\n    #DivTitle {\n        width: 570px;\n        margin-left: 10px;\n        margin-right: 10px;\n    }\n\n    #H1Title {\n        width: 100%;\n        font-family: Arial, Helvetica, sans-serif;\n        text-align: center;\n        color: #fff;\n    }\n    select {\n        width: 100%;\n        height: 25px;\n        border-radius: 4px;\n    }\n\n    #selgrupo {\n        width: 100%;\n    }\n    #arca {\n        margin-left: 10px;\n        margin-right: 10px;\n        margin-top: 5px;\n        margin-bottom: 5px;\n        border-radius: 4px;\n        border: 1px solid #fff;\n        display: flex;\n        width: 570px;\n        flex-direction: column;\n        align-items: flex-start;\n        justify-content: center;\n        padding-right: 20px;\n\n        h1 {\n            color: #fff;\n            font-size: 13px;\n            font-family: Arial;\n            font-weight: normal;\n        }\n\n        .containers {\n            width: 100%;\n            margin-left: 10px;\n            margin-right: 10px;\n            margin-top: 5px;\n            margin-bottom: 5px;\n        }\n\n        #div1 {\n            width: 100%;\n            display: flex;\n            flex-direction: row;\n        }\n        .inicio {\n            width: 100%;\n        }\n        #divinputREF {\n            margin-right: 3px;\n        }\n        #inputREF {\n            width: 100%;\n        }\n        #div2 {\n            width: 100%;\n            margin-left: 10px;\n            margin-right: 100px;\n        }\n        #div3 {\n            width: 100%;\n            display: flex;\n            flex-direction: row;\n        }\n        #div3 div {\n            margin-right: 3px;\n        }\n        #div4 {\n        }\n\n        input {\n            border-radius: 4px;\n            padding: 10px;\n            height: 20px;\n            border-color: #fff;\n        }\n        .descriptions {\n            width: 100%;\n        }\n        .inputEQ {\n            width: 100%;\n        }\n        .inputValore {\n            width: 100px;\n        }\n    }\n    #containersButton {\n        width: 100%;\n        padding-right: 15px;\n        #div5 {\n            width: 100%;\n            display: flex;\n            flex-direction: row;\n            align-items: flex-end;\n            justify-content: flex-end;\n        }\n\n        .botoes {\n            margin-top: 7px;\n            margin-bottom: 7px;\n        }\n        button {\n            padding: 10px;\n            margin: 3px;\n            border-radius: 4px;\n            border-color: #efefef;\n        }\n        button:hover {\n            background-color: #a9a9a9;\n            border-color: #a9a9a9;\n        }\n    }\n`;\n\nexport const Repositories = styled.div``;\n","import React, { useState, useEffect } from 'react';\n// import { Fi } from 'react-icons/fi';\n\nimport { Link } from 'react-router-dom';\n\nimport { GRADE } from './styles';\nimport api from '../../services/api';\n\nconst Dashboard: React.FC = () => {\n    const [codigo, setCodigo] = useState('');\n    const [nome, setNome] = useState('');\n    const [custo, setCusto] = useState(0);\n    const [valor_venda, setValorVenda] = useState(0);\n    const [estoqueMin, setEstoqueMin] = useState(0);\n    const [estoqueMax, setEstoqueMax] = useState(0);\n    const [embalagem, setEmbalagem] = useState('');\n    const [quantidade, setQuantidade] = useState(0);\n    const [descricaoR, setDescricaoR] = useState('');\n    const [descricaoGeral, setDescricaoGeral] = useState('');\n    const [id_grupo, setId_grupo] = useState(1);\n    const [produto, setProduto] = useState([\n        {\n            id: '',\n            nome: '',\n            codigo: '',\n            custo: 0,\n            valor_venda: 0,\n            id_grupo: 0,\n        },\n    ]);\n    const [grupoproduto, setGrupoproduto] = useState([\n        {\n            id: '',\n            nome: '',\n        },\n    ]);\n    useEffect(() => {\n        api.get('produto').then(response => {\n            setProduto(response.data);\n        });\n        api.get('grupoproduto').then(response => {\n            setGrupoproduto(response.data);\n        });\n    }, []);\n    async function addProduto(): Promise<void> {\n        await api.post('produto', {\n            nome,\n            codigo,\n            custo,\n            valor_venda,\n            id_grupo,\n            estoqueMin,\n            estoqueMax,\n            embalagem,\n            quantidade,\n            descricaoR,\n            descricaoGeral,\n        });\n        alert('Salvo com Sucesso');\n    }\n    async function cadastrar(): Promise<void> {\n        addProduto();\n        ver();\n    }\n    async function ver(): Promise<void> {\n        await api.get('produto').then(response => {\n            setProduto(response.data);\n        });\n    }\n\n    return (\n        <>\n            <GRADE>\n                <div id=\"DivTitle\">\n                    <h1 id=\"H1Title\">CADASTRO DE PRODUTOS</h1>\n                </div>\n                <div id=\"arca\">\n                    <div id=\"div1\" className=\"containers\">\n                        <div className=\"inicio\" id=\"divinputREF\">\n                            <h1>Referencia</h1>\n                            <input\n                                id=\"inputREF\"\n                                onChange={e => [[setCodigo(e.target.value)]]}\n                                type=\"text\"\n                            />\n                        </div>\n\n                        <div className=\"inicio\">\n                            <h1>Sub Grupo</h1>\n                            <select\n                                name=\"\"\n                                id=\"selgrupo\"\n                                onChange={e =>\n                                    setId_grupo(Number(e.target.value))\n                                }\n                            >\n                                <option value=\"Selecione\" disabled hidden>\n                                    Selecione uma opção\n                                </option>\n                                {grupoproduto.map(option => {\n                                    return (\n                                        <option\n                                            key={option.id}\n                                            value={option.id}\n                                        >\n                                            {option.nome}\n                                        </option>\n                                    );\n                                })}\n                            </select>\n                        </div>\n                    </div>\n                    <div className=\"containers\">\n                        <div>\n                            <h1>Descrição Reduzida</h1>\n                            <input\n                                onChange={e => [\n                                    setDescricaoR(e.target.value),\n                                    setNome(e.target.value),\n                                ]}\n                                className=\"descriptions\"\n                                type=\"text\"\n                            />\n                        </div>\n                    </div>\n                    <div id=\"div3\" className=\"containers\">\n                        <div>\n                            <h1>Estoque Mín</h1>\n                            <input\n                                onChange={e =>\n                                    setEstoqueMin(Number(e.target.value))\n                                }\n                                className=\"inputEQ\"\n                                type=\"number\"\n                            />\n                        </div>\n                        <div>\n                            <h1>Estoque Máx</h1>\n                            <input\n                                onChange={e =>\n                                    setEstoqueMax(Number(e.target.value))\n                                }\n                                className=\"inputEQ\"\n                                type=\"number\"\n                            />\n                        </div>\n                        <div>\n                            <h1>Valor Custo</h1>\n                            <input\n                                onChange={e => setCusto(Number(e.target.value))}\n                                className=\"inputValore\"\n                                type=\"number\"\n                            />\n                        </div>\n                        <div>\n                            <h1>Embalagem</h1>\n                            <select\n                                id=\"selectEm\"\n                                onChange={e => setEmbalagem(e.target.value)}\n                            >\n                                <option value=\"Pacote\">Pacote</option>\n                                <option value=\"Un\">Un</option>\n                                <option value=\"Kg\">Kg</option>\n                                <option value=\"Litro\">Litro</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div className=\"containers\">\n                        <div>\n                            <h1>Vr. Venda</h1>\n                            <input\n                                onChange={e =>\n                                    setValorVenda(Number(e.target.value))\n                                }\n                                className=\"inputValore\"\n                                type=\"number\"\n                            />\n                        </div>\n                    </div>\n\n                    <div id=\"div4\" className=\"containers\">\n                        <div>\n                            <h1>Descrição Completa</h1>\n                            <textarea\n                                onChange={e =>\n                                    setDescricaoGeral(e.target.value)\n                                }\n                                className=\"descriptions\"\n                                name=\"\"\n                                id=\"\"\n                            />\n                        </div>\n                    </div>\n                </div>\n                <div id=\"containersButton\">\n                    <div className=\"botoes\" id=\"div5\">\n                        <div id=\"bdivS\">\n                            <button onClick={addProduto} type=\"button\">\n                                Salvar\n                            </button>\n                        </div>\n                        <div id=\"bdiv\">\n                            <button type=\"button\">Cancelar</button>\n                        </div>\n                    </div>\n                </div>\n            </GRADE>\n        </>\n    );\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport FormaPagamento from '../pages/FormaPagamento/index';\nimport Produtos from '../pages/Produtos/index';\nimport Cliente from '../pages/Cliente/index';\nimport PDV from '../pages/PDV/index';\n// Switch vai garantir que apenas uma rota seja visivel\n// //<Route path=\"/\" exact component={Produtos} />\nconst Routes: React.FC = () => (\n    <BrowserRouter>\n        <Route path=\"/\" exact component={FormaPagamento} />\n        <Route path=\"/formapagamento\" exact component={FormaPagamento} />\n\n        <Route path=\"/produtos\" exact component={Produtos} />\n    </BrowserRouter>\n);\n\nexport default Routes;\n","import { createGlobalStyle } from 'styled-components';\n\nconst urlgit =\n    'https://xesque.rocketseat.dev/platform/1587379725719-attachment.svg';\nexport default createGlobalStyle`\n*   * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n  body {\n   background-color:#128AC6;\n  }\n  body,  button {\n    font: 16px Roboto, sans-serif;\n  }\n\n\n  #root {\n    max-width: 960px;\n    margin: 0 auto;\n    padding: 40px 20px;\n  }\n  button {\n    cursor: pointer;\n  }\n`;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport Routes from './routes/index';\n\nimport GlobalStyle from './styles/global';\n\nconst App: React.FC = () => (\n    <>\n        <BrowserRouter>\n            <Routes />\n        </BrowserRouter>\n        <GlobalStyle />\n    </>\n);\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}